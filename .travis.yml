dist: xenial
language: bash
if: head_branch =~ ^ft-automation-update$ OR branch = ft-automation

env:
  - tf_version=0.12.19
  - tf_init_cli_options="-input=false"

before_install:
  - wget https://releases.hashicorp.com/terraform/"$tf_version"/terraform_"$tf_version"_linux_amd64.zip
  - unzip terraform_"$tf_version"_linux_amd64.zip
  - sudo mv terraform /usr/local/bin/
  - rm terraform_"$tf_version"_linux_amd64.zip
  - curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash

before_script:
  - git clone https://$gitlabuser:$gitlabtoken@gitlab.com/Srikakulapu/terraform-input.git
  - pwd && ls -l
  - sudo mv terraform-input/ec-file-transfer.tfvars /usr/ec-file-transfer.tfvars
  - ls -l /usr/
  - export AWS_ACCESS_KEY_ID=$AWSACCESKEYID
  - export AWS_SECRET_ACCESS_KEY=$AWSSECRETKEYID
  - export AWS_DEFAULT_REGION=$AWSREGION
  - export ARM_CLIENT_ID=$AZUSER
  - export ARM_CLIENT_SECRET=$AZPWD
  - export ARM_SUBSCRIPTION_ID=$AZSUBSCRIPTIONID
  - export ARM_TENANT_ID=$AZTENANTID

jobs:
    include:
        - stage: terraform plan
          script:
              - cd ft/aws2azure/
              - echo "Validating Terraform fmt"
              - terraform fmt -recursive
              - echo "Pull request detected, creating change plan"
              - terraform init $tf_init_cli_options
              - terraform validate
              - pwd && ls -l
              - terraform plan -var-file="/usr/ec-file-transfer.tfvars"
              - terraform apply -var-file="/usr/ec-file-transfer.tfvars" -auto-approve

notifications:
  email:
    recipients:
    - ec-research@ge.com
    on_success: always
    on_failure: always